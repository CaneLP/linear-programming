*****************************************
*************** PHASE ONE ***************
*****************************************
[[ 1.  3.  1.  1.  0.  0.  0.  0. 10.]
 [ 3.  1. -1.  0. -1.  0.  0.  1.  2.]
 [ 3.  1.  3.  0.  0.  1.  0.  0.  6.]
 [ 1.  0.  0.  0.  0.  0.  1.  0.  1.]
 [ 0.  0.  0.  0.  0.  0.  0.  1.  0.]]

[[ 1.  3.  1.  1.  0.  0.  0.  0. 10.]
 [ 3.  1. -1.  0. -1.  0.  0.  1.  2.]
 [ 3.  1.  3.  0.  0.  1.  0.  0.  6.]
 [ 1.  0.  0.  0.  0.  0.  1.  0.  1.]
 [-3. -1.  1. -0.  1. -0. -0. -0. -2.]]

[[ 0.      2.6667  1.3333  1.      0.3333  0.      0.     -0.3333  9.3333]
 [ 1.      0.3333 -0.3333  0.     -0.3333  0.      0.      0.3333  0.6667]
 [ 0.      0.      4.      0.      1.      1.      0.     -1.      4.    ]
 [ 0.     -0.3333  0.3333  0.      0.3333  0.      1.     -0.3333  0.3333]
 [ 0.      0.      0.      0.      0.      0.      0.      1.      0.    ]]

*****************************************
*************** PHASE TWO ***************
*****************************************
[[ 0.      2.6667  1.3333  1.      0.3333  0.      0.      9.3333]
 [ 1.      0.3333 -0.3333  0.     -0.3333  0.      0.      0.6667]
 [ 0.      0.      4.      0.      1.      1.      0.      4.    ]
 [ 0.     -0.3333  0.3333  0.      0.3333  0.      1.      0.3333]
 [-3.     -1.     -4.      0.      0.      0.      0.      0.    ]]

[[ 0.      2.6667  1.3333  1.      0.3333  0.      0.      9.3333]
 [ 1.      0.3333 -0.3333  0.     -0.3333  0.      0.      0.6667]
 [ 0.      0.      4.      0.      1.      1.      0.      4.    ]
 [ 0.     -0.3333  0.3333  0.      0.3333  0.      1.      0.3333]
 [ 0.      0.     -5.      0.     -1.      0.      0.      2.    ]]

[[ 0.      2.6667  0.      1.      0.     -0.3333  0.      8.    ]
 [ 1.      0.3333  0.      0.     -0.25    0.0833  0.      1.    ]
 [ 0.      0.      1.      0.      0.25    0.25    0.      1.    ]
 [ 0.     -0.3333  0.      0.      0.25   -0.0833  1.      0.    ]
 [ 0.      0.      0.      0.      0.25    1.25    0.      7.    ]]

******************************
Input:
(min) c = [-3 -1 -4]
subject to: 
[1 3 1] <= 10
[ 3  1 -1] >= 2
[3 1 3] <= 6
[1 0 0] <= 1
******************************
Optimal solution is: 
[[1. 0. 1. 8. 0. 0. 0.]]
min_f: 7.0
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
[[0. 1. 0. 4. 1. 0. 0. 1.]
 [0. 0. 1. 5. 0. 1. 0. 2.]
 [1. 0. 0. 8. 0. 0. 1. 3.]
 [0. 0. 0. 0. 1. 1. 1. 0.]]

[[  0.   1.   0.   4.   1.   0.   0.   1.]
 [  0.   0.   1.   5.   0.   1.   0.   2.]
 [  1.   0.   0.   8.   0.   0.   1.   3.]
 [ -1.  -1.  -1. -17.  -0.  -0.  -0.  -6.]]

[[ 0.  1.  0.  4.  1.  0.  0.  1.]
 [ 0.  0.  1.  5.  0.  1.  0.  2.]
 [ 1.  0.  0.  8.  0.  0.  1.  3.]
 [ 0. -1. -1. -9.  0.  0.  1. -3.]]

[[ 0.  1.  0.  4.  1.  0.  0.  1.]
 [ 0.  0.  1.  5.  0.  1.  0.  2.]
 [ 1.  0.  0.  8.  0.  0.  1.  3.]
 [ 0.  0. -1. -5.  1.  0.  1. -2.]]

[[0. 1. 0. 4. 1. 0. 0. 1.]
 [0. 0. 1. 5. 0. 1. 0. 2.]
 [1. 0. 0. 8. 0. 0. 1. 3.]
 [0. 0. 0. 0. 1. 1. 1. 0.]]

*****************************************
*************** PHASE TWO ***************
*****************************************
[[0. 1. 0. 4. 1. 0. 0. 1.]
 [0. 0. 1. 5. 0. 1. 0. 2.]
 [1. 0. 0. 8. 0. 0. 1. 3.]
 [1. 5. 2. 9. 0. 0. 0. 0.]]

[[  0.   1.   0.   4.   1.]
 [  0.   0.   1.   5.   2.]
 [  1.   0.   0.   8.   3.]
 [  0.   0.   0. -29. -12.]]

[[ 0.    0.25  0.    1.    0.25]
 [ 0.   -1.25  1.    0.    0.75]
 [ 1.   -2.    0.    0.    1.  ]
 [ 0.    7.25  0.    0.   -4.75]]

******************************
Input:
(min) c = [1.0, 5.0, 2.0, 9.0]
subject to: 
[0. 1. 0. 4.] = 1.0
[0. 0. 1. 5.] = 2.0
[1. 0. 0. 8.] = 3.0
******************************
Optimal solution is: 
[[1.   0.   0.75 0.25]]
min_f: 4.75
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
[[-1.  3. -1.  0.  1.  5.]
 [-1.  4.  0.  1.  0.  2.]
 [ 0.  0.  0.  0.  1.  0.]]

[[-1.  3. -1.  0.  1.  5.]
 [-1.  4.  0.  1.  0.  2.]
 [ 1. -3.  1. -0. -0. -5.]]

[[-0.25  0.   -1.   -0.75  1.    3.5 ]
 [-0.25  1.    0.    0.25  0.    0.5 ]
 [ 0.25  0.    1.    0.75  0.   -3.5 ]]

-3.5
The original problem is infeasible!



*****************************************
*************** PHASE ONE ***************
*****************************************
[[-4.  6.  1.  0.  9.]
 [ 1.  1.  0.  1.  4.]
 [ 0.  0.  0.  0.  0.]]

[[-4.  6.  1.  0.  9.]
 [ 1.  1.  0.  1.  4.]
 [-0. -0. -0. -0.  0.]]

*****************************************
*************** PHASE TWO ***************
*****************************************
[[-4.  6.  1.  0.  9.]
 [ 1.  1.  0.  1.  4.]
 [-1.  2.  0.  0.  0.]]

[[-4.  6.  1.  0.  9.]
 [ 1.  1.  0.  1.  4.]
 [-1.  2.  0.  0.  0.]]

[[ 0. 10.  1.  4. 25.]
 [ 1.  1.  0.  1.  4.]
 [ 0.  3.  0.  1.  4.]]

******************************
Input:
(max) c = [ 1. -2.]
subject to: 
[-4.  6.] <= 9.0
[1. 1.] <= 4.0
******************************
Optimal solution is: 
[[ 4.  0. 25.  0.]]
max_f: 4.0
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
1   -1    3   -1   -1    0    0   1   0   0   9   
4    0   -1    3    0   -1    0   0   1   0   1   
1    3    0   -3    0    0   -1   0   0   1   3   
0    0    0    0    0    0    0   1   1   1   0   

 1   -1    3   -1   -1    0    0    1    0    0     9   
 4    0   -1    3    0   -1    0    0    1    0     1   
 1    3    0   -3    0    0   -1    0    0    1     3   
-6   -2   -2    1    1    1    1   -0   -0   -0   -13   

0   -1    3.25   -1.75   -1    0.25    0   1   -0.25   0    8.75   
1    0   -0.25    0.75    0   -0.25    0   0    0.25   0    0.25   
0    3    0.25   -3.75    0    0.25   -1   0   -0.25   1    2.75   
0   -2    -3.5     5.5    1    -0.5    1   0     1.5   0   -11.5   

0   0     3.33333      -3   -1    0.333333   -0.333333   1    -0.333333   0.333333    9.66667   
1   0       -0.25    0.75    0       -0.25           0   0         0.25          0       0.25   
0   1   0.0833333   -1.25    0   0.0833333   -0.333333   0   -0.0833333   0.333333   0.916667   
0   0    -3.33333       3    1   -0.333333    0.333333   0      1.33333   0.666667   -9.66667   

0   0   1     -0.9     -0.3      0.1     -0.1      0.3     -0.1     0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025    0.075    0.225   0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   -0.025   -0.075   0.325   0.675   
0   0   0        0        0        0        0        1        1       1       0   

*****************************************
*************** PHASE TWO ***************
*****************************************
0   0   1     -0.9     -0.3      0.1     -0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   0.675   
1   1   0        5        0        0        0       0   

0   0   1     -0.9     -0.3      0.1     -0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   0.675   
0   0   0     5.65     0.05     0.15     0.35   -1.65   

******************************
Input:
(min) c = [1, 1, 0, 5]
subject to: 
1   -1   3   -1    >= 9
4   0   -1   3    >= 1
1   3   0   -3    >= 3
******************************
Optimal solution is: 
[[0.975 0.675 2.9   0.    0.    0.    0.   ]]
min_f: 1.65
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
1   -1    3   -1   -1    0    0   1   0   0   9   
4    0   -1    3    0   -1    0   0   1   0   1   
1    3    0   -3    0    0   -1   0   0   1   3   
0    0    0    0    0    0    0   1   1   1   0   

 1   -1    3   -1   -1    0    0    1    0    0     9   
 4    0   -1    3    0   -1    0    0    1    0     1   
 1    3    0   -3    0    0   -1    0    0    1     3   
-6   -2   -2    1    1    1    1   -0   -0   -0   -13   

0   -1    3.25   -1.75   -1    0.25    0   1   -0.25   0    8.75   
1    0   -0.25    0.75    0   -0.25    0   0    0.25   0    0.25   
0    3    0.25   -3.75    0    0.25   -1   0   -0.25   1    2.75   
0   -2    -3.5     5.5    1    -0.5    1   0     1.5   0   -11.5   

0   0     3.33333      -3   -1    0.333333   -0.333333   1    -0.333333   0.333333    9.66667   
1   0       -0.25    0.75    0       -0.25           0   0         0.25          0       0.25   
0   1   0.0833333   -1.25    0   0.0833333   -0.333333   0   -0.0833333   0.333333   0.916667   
0   0    -3.33333       3    1   -0.333333    0.333333   0      1.33333   0.666667   -9.66667   

0   0   1     -0.9     -0.3      0.1     -0.1      0.3     -0.1     0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025    0.075    0.225   0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   -0.025   -0.075   0.325   0.675   
0   0   0        0        0        0        0        1        1       1       0   

*****************************************
*************** PHASE TWO ***************
*****************************************
0   0   1     -0.9     -0.3      0.1     -0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   0.675   
1   1   0        5        0        0        0       0   

0   0   1     -0.9     -0.3      0.1     -0.1     2.9   
1   0   0    0.525   -0.075   -0.225   -0.025   0.975   
0   1   0   -1.175    0.025    0.075   -0.325   0.675   
0   0   0     5.65     0.05     0.15     0.35   -1.65   

******************************
Input:
(min) c = [1, 1, 0, 5]
subject to: 
1   -1   3   -1    >= 9
4   0   -1   3    >= 1
1   3   0   -3    >= 3
******************************
Optimal solution is: 
0.975   0.675   2.9   0   0   0   0   
min_f: 1.65
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
1   -1    3   -1   -1    0    0   1   0   0   9   
4    0   -1    3    0   -1    0   0   1   0   1   
1    3    0    3    0    0   -1   0   0   1   3   
0    0    0    0    0    0    0   1   1   1   0   

 1   -1    3   -1   -1    0    0    1    0    0     9   
 4    0   -1    3    0   -1    0    0    1    0     1   
 1    3    0    3    0    0   -1    0    0    1     3   
-6   -2   -2   -5    1    1    1   -0   -0   -0   -13   

0   -1    3.25   -1.75   -1    0.25    0   1   -0.25   0    8.75   
1    0   -0.25    0.75    0   -0.25    0   0    0.25   0    0.25   
0    3    0.25    2.25    0    0.25   -1   0   -0.25   1    2.75   
0   -2    -3.5    -0.5    1    -0.5    1   0     1.5   0   -11.5   

0   0     3.33333     -1   -1    0.333333   -0.333333   1    -0.333333   0.333333    9.66667   
1   0       -0.25   0.75    0       -0.25           0   0         0.25          0       0.25   
0   1   0.0833333   0.75    0   0.0833333   -0.333333   0   -0.0833333   0.333333   0.916667   
0   0    -3.33333      1    1   -0.333333    0.333333   0      1.33333   0.666667   -9.66667   

0   0   1    -0.3     -0.3      0.1     -0.1      0.3     -0.1     0.1     2.9   
1   0   0   0.675   -0.075   -0.225   -0.025    0.075    0.225   0.025   0.975   
0   1   0   0.775    0.025    0.075   -0.325   -0.025   -0.075   0.325   0.675   
0   0   0       0        0        0        0        1        1       1       0   

*****************************************
*************** PHASE TWO ***************
*****************************************
0   0   1    -0.3     -0.3      0.1     -0.1     2.9   
1   0   0   0.675   -0.075   -0.225   -0.025   0.975   
0   1   0   0.775    0.025    0.075   -0.325   0.675   
1   1   0       5        0        0        0       0   

0   0   1    -0.3     -0.3      0.1     -0.1     2.9   
1   0   0   0.675   -0.075   -0.225   -0.025   0.975   
0   1   0   0.775    0.025    0.075   -0.325   0.675   
0   0   0    3.55     0.05     0.15     0.35   -1.65   

******************************
Input:
(min) c = [1.0, 1.0, 0.0, 5.0]
subject to: 
1   -1   3   -1    >= 9.0
4   0   -1   3    >= 1.0
1   3   0   3    >= 3.0
******************************
Optimal solution is: 
0.975   0.675   2.9   0   0   0   0   
min_f: 1.65
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
8   -7   -1   0   0   -14   
1    6    0   1   0    60   
7   -3    0   0   1    16   
0    0    0   0   0     0   

 8   -7   -1    0    0   -14   
 1    6    0    1    0    60   
 7   -3    0    0    1    16   
-0   -0   -0   -0   -0     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

1   -0.875   -0.125   0   0   -1.75   
0    6.875    0.125   1   0   61.75   
0    3.125    0.875   0   1   28.25   
0   -1.875   -0.125   0   0   -1.75   

1   0    -0.109091    0.127273   0    6.10909   
0   1    0.0181818    0.145455   0    8.98182   
0   0     0.818182   -0.454545   1   0.181818   
0   0   -0.0909091    0.272727   0    15.0909   

1   0   0   0.0666667     0.133333    6.13333   
0   1   0    0.155556   -0.0222222    8.97778   
0   0   1   -0.555556      1.22222   0.222222   
0   0   0    0.222222     0.111111    15.1111   

******************************
Input:
(max) c = [1 1]
subject to: 
8   -7    >= -14
1   6    <= 60
7   -3    <= 16
******************************
Optimal solution is: 
6.13333   8.97778   0.222222   0   0   
max_f: 15.11111111111111
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
2   -2   -3    2   1   0   5   
0    3    3   -1   0   1   3   
0    0    0    0   1   1   0   

 2   -2   -3    2    1    0    5   
 0    3    3   -1    0    1    3   
-2   -1   -0   -1   -0   -0   -8   

1   -1   -1.5    1   0.5   0   2.5   
0    3      3   -1     0   1     3   
0   -3     -3    1     1   0    -3   

1   0   -0.5    0.666667   0.5   0.333333   3.5   
0   1      1   -0.333333     0   0.333333     1   
0   0      0           0     1          1     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 1    0   -0.5    0.6667   3.5   
 0    1      1   -0.3333     1   
-1   -1      0         0     0   

1   0   -0.5    0.6667   3.5   
0   1      1   -0.3333     1   
0   0    0.5    0.3333   4.5   

******************************
Input:
(min) c = [-1, -1, 0, 0]
subject to: 
2   -2   -3   2    = 5
0   3   3   -1    = 3
******************************
Optimal solution is: 
3.5   1   0   0   
min_f: -4.5
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
8   -7   -1   0   0   -14   
1    6    0   1   0    60   
7   -3    0   0   1    16   
0    0    0   0   0     0   

 8   -7   -1    0    0   -14   
 1    6    0    1    0    60   
 7   -3    0    0    1    16   
-0   -0   -0   -0   -0     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

1   -0.875   -0.125   0   0   -1.75   
0    6.875    0.125   1   0   61.75   
0    3.125    0.875   0   1   28.25   
0   -1.875   -0.125   0   0   -1.75   

1   0    -0.109091    0.127273   0    6.10909   
0   1    0.0181818    0.145455   0    8.98182   
0   0     0.818182   -0.454545   1   0.181818   
0   0   -0.0909091    0.272727   0    15.0909   

1   0   0   0.0666667     0.133333    6.13333   
0   1   0    0.155556   -0.0222222    8.97778   
0   0   1   -0.555556      1.22222   0.222222   
0   0   0    0.222222     0.111111    15.1111   

******************************
Input:
(max) c = [1 1]
subject to: 
8   -7    >= -14
1   6    <= 60
7   -3    <= 16
******************************
Optimal solution is: 
6.13333   8.97778   0.222222   0   0   
max_f: 15.11111111111111
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
8   -7   -1   0   0   -14   
1    6    0   1   0    60   
7   -3    0   0   1    16   
0    0    0   0   0     0   

 8   -7   -1    0    0   -14   
 1    6    0    1    0    60   
 7   -3    0    0    1    16   
-0   -0   -0   -0   -0     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

1   -0.875   -0.125   0   0   -1.75   
0    6.875    0.125   1   0   61.75   
0    3.125    0.875   0   1   28.25   
0   -1.875   -0.125   0   0   -1.75   

1   0    -0.109091    0.127273   0    6.10909   
0   1    0.0181818    0.145455   0    8.98182   
0   0     0.818182   -0.454545   1   0.181818   
0   0   -0.0909091    0.272727   0    15.0909   

1   0   0   0.0666667     0.133333    6.13333   
0   1   0    0.155556   -0.0222222    8.97778   
0   0   1   -0.555556      1.22222   0.222222   
0   0   0    0.222222     0.111111    15.1111   

******************************
Input:
(max) c = [1 1]
subject to: 
8   -7    >= -14
1   6    <= 60
7   -3    <= 16
******************************
Optimal solution is: 
6.13333   8.97778   0.222222   0   0   
max_f: 15.11111111111111
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
2   11   1   0   0   38   
1    1   0   1   0    7   
4   -5   0   0   1    5   
0    0   0   0   0    0   

 2   11    1    0    0   38   
 1    1    0    1    0    7   
 4   -5    0    0    1    5   
-0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2   11   1   0   0   38   
 1    1   0   1   0    7   
 4   -5   0   0   1    5   
-1   -1   0   0   0    0   

 2   11   1   0   0   38   
 1    1   0   1   0    7   
 4   -5   0   0   1    5   
-1   -1   0   0   0    0   

0    13.5   1   0    -0.5   35.5   
0    2.25   0   1   -0.25   5.75   
1   -1.25   0   0    0.25   1.25   
0   -2.25   0   0    0.25   1.25   

0   0   1         -6           1         1   
0   1   0   0.444444   -0.111111   2.55556   
1   0   0   0.555556    0.111111   4.44444   
0   0   0          1           0         7   

******************************
Input:
(max) c = [1 1]
subject to: 
2   11    <= 38
1   1    <= 7
4   -5    <= 5
******************************
Optimal solution is: 
4.44444   2.55556   1   0   0   
max_f: 7.0
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
2   -2   -3    2   1   0   5   
0    3    3   -1   0   1   3   
0    0    0    0   1   1   0   

 2   -2   -3    2    1    0    5   
 0    3    3   -1    0    1    3   
-2   -1   -0   -1   -0   -0   -8   

1   -1   -1.5    1   0.5   0   2.5   
0    3      3   -1     0   1     3   
0   -3     -3    1     1   0    -3   

1   0   -0.5    0.666667   0.5   0.333333   3.5   
0   1      1   -0.333333     0   0.333333     1   
0   0      0           0     1          1     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 1    0   -0.5    0.6667   3.5   
 0    1      1   -0.3333     1   
-1   -1      0         0     0   

1   0   -0.5    0.6667   3.5   
0   1      1   -0.3333     1   
0   0    0.5    0.3333   4.5   

******************************
Input:
(min) c = [-1, -1, 0, 0]
subject to: 
2   -2   -3   2    = 5
0   3   3   -1    = 3
******************************
Optimal solution is: 
3.5   1   0   0   
min_f: -4.5
******************************



*****************************************
*************** PHASE ONE ***************
*****************************************
8   -7   -1   0   0   -14   
1    6    0   1   0    60   
7   -3    0   0   1    16   
0    0    0   0   0     0   

 8   -7   -1    0    0   -14   
 1    6    0    1    0    60   
 7   -3    0    0    1    16   
-0   -0   -0   -0   -0     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

1   -0.875   -0.125   0   0   -1.75   
0    6.875    0.125   1   0   61.75   
0    3.125    0.875   0   1   28.25   
0   -1.875   -0.125   0   0   -1.75   

1   0    -0.109091    0.127273   0    6.10909   
0   1    0.0181818    0.145455   0    8.98182   
0   0     0.818182   -0.454545   1   0.181818   
0   0   -0.0909091    0.272727   0    15.0909   

1   0   0   0.0666667     0.133333    6.13333   
0   1   0    0.155556   -0.0222222    8.97778   
0   0   1   -0.555556      1.22222   0.222222   
0   0   0    0.222222     0.111111    15.1111   

******************************
Input:
(max) c = [1 1]
subject to: 
8   -7    >= -14
1   6    <= 60
7   -3    <= 16
******************************
Optimal solution is: 
6.13333   8.97778   0.222222   0   0   
max_f: 15.11111111111111
******************************



[[ 8 -7]
 [ 1  6]
 [ 7 -3]] [-14, 60, 16] [-1 -1] [<RelationSymbols.greater: 1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
8   -7   -1   0   0   -14   
1    6    0   1   0    60   
7   -3    0   0   1    16   
0    0    0   0   0     0   

 8   -7   -1    0    0   -14   
 1    6    0    1    0    60   
 7   -3    0    0    1    16   
-0   -0   -0   -0   -0     0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

 8   -7   -1   0   0   -14   
 1    6    0   1   0    60   
 7   -3    0   0   1    16   
-1   -1    0   0   0     0   

1   -0.875   -0.125   0   0   -1.75   
0    6.875    0.125   1   0   61.75   
0    3.125    0.875   0   1   28.25   
0   -1.875   -0.125   0   0   -1.75   

1   0    -0.109091    0.127273   0    6.10909   
0   1    0.0181818    0.145455   0    8.98182   
0   0     0.818182   -0.454545   1   0.181818   
0   0   -0.0909091    0.272727   0    15.0909   

1   0   0   0.0666667     0.133333    6.13333   
0   1   0    0.155556   -0.0222222    8.97778   
0   0   1   -0.555556      1.22222   0.222222   
0   0   0    0.222222     0.111111    15.1111   

******************************
Input:
(max) c = [1 1]
subject to: 
8   -7    >= -14
1   6    <= 60
7   -3    <= 16
******************************
Optimal solution is: 
6.13333   8.97778   0.222222   0   0   
max_f: 15.11111111111111
******************************



[[ 2 -1 -1]
 [ 1  2  1]
 [-1  1 -2]] [0, 3, -4] [7, 4, 1] [<RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 3
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   -1   -1   -1    0    0   0    0   
 1    2    1    0   -1    0   1    3   
-1    1   -2    0    0   -1   0   -4   
 0    0    0    0    0    0   1    0   

 2   -1   -1   -1    0    0    0    0   
 1    2    1    0   -1    0    1    3   
-1    1   -2    0    0   -1    0   -4   
-1   -2   -1   -0    1   -0   -0   -3   

1   -0.5   -0.5   -0.5    0    0   0    0   
0    2.5    1.5    0.5   -1    0   1    3   
0    0.5   -2.5   -0.5    0   -1   0   -4   
0   -2.5   -1.5   -0.5    1    0   0   -3   

1   0    -3   -1    0   -1   0    -4   
0   0    14    3   -1    5   1    23   
0   1    -5   -1    0   -2   0    -8   
0   0   -14   -3    1   -5   0   -23   

1   0   0   -0.357143    -0.214286   0.0714286    0.214286   0.928571   
0   0   1    0.214286   -0.0714286    0.357143   0.0714286    1.64286   
0   1   0   0.0714286    -0.357143   -0.214286    0.357143   0.214286   
0   0   0           0            0           0           1          0   

*****************************************
*************** PHASE TWO ***************
*****************************************
1   0   0   -0.3571   -0.2143    0.0714   0.9286   
0   0   1    0.2143   -0.0714    0.3571   1.6429   
0   1   0    0.0714   -0.3571   -0.2143   0.2143   
7   4   1         0         0         0        0   

1   0   0   -0.3571   -0.2143    0.0714   0.9286   
0   0   1    0.2143   -0.0714    0.3571   1.6429   
0   1   0    0.0714   -0.3571   -0.2143   0.2143   
0   0   0         2         3        -0       -9   

1   0   -0.2   -0.4   -0.2   0   0.6   
0   0    2.8    0.6   -0.2   1   4.6   
0   1    0.6    0.2   -0.4   0   1.2   
0   0      0      2      3   0    -9   

******************************
Input:
(min) c = [7, 4, 1]
subject to: 
2   -1   -1    >= 0
1   2   1    >= 3
-1   1   -2    >= -4
******************************
Optimal solution is: 
0.6   1.2   0   0   0   4.6   
min_f: 8.999999999999998
******************************



[[ 2  1  5]
 [ 1 -5  1]
 [14  2 -5]] [15, 7, 5] [ -1 -11  -2] [<RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 3
*****************************************
*************** PHASE ONE ***************
*****************************************
 2    1    5   1    0    0   0   0   15   
 1   -5    1   0   -1    0   1   0    7   
14    2   -5   0    0   -1   0   1    5   
 0    0    0   0    0    0   1   1    0   

  2    1    5    1    0    0    0    0    15   
  1   -5    1    0   -1    0    1    0     7   
 14    2   -5    0    0   -1    0    1     5   
-15    3    4   -0    1    1   -0   -0   -12   

0   0.714286     5.71429   1    0     0.142857   0    -0.142857    14.2857   
0   -5.14286     1.35714   0   -1    0.0714286   1   -0.0714286    6.64286   
1   0.142857   -0.357143   0    0   -0.0714286   0    0.0714286   0.357143   
0    5.14286    -1.35714   0    1   -0.0714286   0      1.07143   -6.64286   

0     0.125   1     0.175    0     0.025   0    -0.025     2.5   
0   -5.3125   0   -0.2375   -1    0.0375   1   -0.0375    3.25   
1    0.1875   0    0.0625    0   -0.0625   0    0.0625    1.25   
0    5.3125   0    0.2375    1   -0.0375   0    1.0375   -3.25   

0    3.66667   1    0.333333   0.666667   0   -0.666667    0       0.333333   
0   -141.667   0    -6.33333   -26.6667   1     26.6667   -1        86.6667   
1   -8.66667   0   -0.333333   -1.66667   0     1.66667    0        6.66667   
0          0   0           0          0   0           1    1   -2.22045e-15   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0     3.6667    1    0.3333     0.6667   0    0    0.3333   
 0   -141.667    0   -6.3333   -26.6667   1   -1   86.6667   
 1    -8.6667    0   -0.3333    -1.6667   0    0    6.6667   
-1        -11   -2         0          0   0    0        -0   

[[ 2  3]
 [11  5]] [12, 35] [4, 5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   12   
11   5   0   1   35   
 0   0   0   0    0   

 2    3    1    0   12   
11    5    0    1   35   
-0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2   3   1   0   12   
11   5   0   1   35   
 4   5   0   0    0   

 2   3   1   0   12   
11   5   0   1   35   
 4   5   0   0    0   

******************************
Input:
(min) c = [4, 5]
subject to: 
2   3    <= 12
11   5    <= 35
******************************
Optimal solution is: 
0   0   12   35   
min_f: -0.0
******************************



[[ 2  3]
 [11  5]] [12, 35] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   12   
11   5   0   1   35   
 0   0   0   0    0   

 2    3    1    0   12   
11    5    0    1   35   
-0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   12   
11    5   0   1   35   
-4   -5   0   0    0   

 2    3   1   0   12   
11    5   0   1   35   
-4   -5   0   0    0   

0    2.09091   1   -0.181818   5.63636   
1   0.454545   0   0.0909091   3.18182   
0   -3.18182   0    0.363636   12.7273   

0   1    0.478261   -0.0869565   2.69565   
1   0   -0.217391     0.130435   1.95652   
0   0     1.52174    0.0869565   21.3043   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
******************************
Optimal solution is: 
1.95652   2.69565   0   0   
max_f: 21.304347826086953
******************************



[[ 2  3]
 [11  5]
 [ 1  0]] [12, 35, 1] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
[[ 2  3]
 [11  5]
 [ 1  0]] [12, 35, 1] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   12   
11   5   0   1   0   35   
 1   0   0   0   1    1   
 0   0   0   0   0    0   

 2    3    1    0    0   12   
11    5    0    1    0   35   
 1    0    0    0    1    1   
-0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   12   
11    5   0   1   0   35   
 1    0   0   0   1    1   
-4   -5   0   0   0    0   

 2    3   1   0   0   12   
11    5   0   1   0   35   
 1    0   0   0   1    1   
-4   -5   0   0   0    0   

0    3   1   0    -2   10   
0    5   0   1   -11   24   
1    0   0   0     1    1   
0   -5   0   0     4    4   

0   1   0.333333   0   -0.666667   3.33333   
0   0   -1.66667   1    -7.66667   7.33333   
1   0          0   0           1         1   
0   0    1.66667   0    0.666667   20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 2] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0   0   0   12   
11   5   0   1    0   0   0   35   
 1   0   0   0   -1   0   1    2   
 0   1   0   0    0   1   0    2   
 0   0   0   0    0   0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0   -1    0    1    2   
 0    1    0    0    0    1    0    2   
-1   -0   -0   -0    1   -0   -0   -2   

0   3   1   0    2   0    -2    8   
0   5   0   1   11   0   -11   13   
1   0   0   0   -1   0     1    2   
0   1   0   0    0   1     0    2   
0   0   0   0    0   0     1    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0    3   1   0    2   0    8   
 0    5   0   1   11   0   13   
 1    0   0   0   -1   0    2   
 0    1   0   0    0   1    2   
-4   -5   0   0    0   0    0   

0    3   1   0    2   0    8   
0    5   0   1   11   0   13   
1    0   0   0   -1   0    2   
0    1   0   0    0   1    2   
0   -5   0   0   -4   0    8   

0   0   1   0    2   -3    2   
0   0   0   1   11   -5    3   
1   0   0   0   -1    0    2   
0   1   0   0    0    1    2   
0   0   0   0   -4    5   18   

0   0   1   -0.181818   0    -2.09091    1.45455   
0   0   0   0.0909091   1   -0.454545   0.272727   
1   0   0   0.0909091   0   -0.454545    2.27273   
0   1   0           0   0           1          2   
0   0   0    0.363636   0     3.18182    19.0909   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    >= 2
0   1    <= 2
******************************
Optimal solution is: 
2.27273   2   1.45455   0   0.272727   0   
max_f: 19.09090909090909
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0    0   0   0   12   
11   5   0   1    0    0   0   0   35   
 1   0   0   0   -1    0   1   0    2   
 0   1   0   0    0   -1   0   1    3   
 0   0   0   0    0    0   1   1    0   

 2    3    1    0    0    0    0    0   12   
11    5    0    1    0    0    0    0   35   
 1    0    0    0   -1    0    1    0    2   
 0    1    0    0    0   -1    0    1    3   
-1   -1   -0   -0    1    1   -0   -0   -5   

0    3   1   0    2    0    -2   0    8   
0    5   0   1   11    0   -11   0   13   
1    0   0   0   -1    0     1   0    2   
0    1   0   0    0   -1     0   1    3   
0   -1   0   0    0    1     1   0   -3   

0   0   1   -0.6   -4.6    0    4.6   0    0.2   
0   1   0    0.2    2.2    0   -2.2   0    2.6   
1   0   0      0     -1    0      1   0      2   
0   0   0   -0.2   -2.2   -1    2.2   1    0.4   
0   0   0    0.2    2.2    1   -1.2   0   -0.4   

0   0    0.217391    -0.130435   -1    0   1   0   0.0434783   
0   1    0.478261   -0.0869565    0    0   0   0     2.69565   
1   0   -0.217391     0.130435    0    0   0   0     1.95652   
0   0   -0.478261    0.0869565    0   -1   0   1    0.304348   
0   0     0.26087    0.0434783    1    1   0   0   -0.347826   

-0.3478260869565216
The original problem is infeasible!


[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

3.0
 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

1.0
0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0    0   0   0   12   
11   5   0   1    0    0   0   0   35   
 1   0   0   0   -1    0   1   0    2   
 0   1   0   0    0   -1   0   1    3   
 0   0   0   0    0    0   1   1    0   

 2    3    1    0    0    0    0    0   12   
11    5    0    1    0    0    0    0   35   
 1    0    0    0   -1    0    1    0    2   
 0    1    0    0    0   -1    0    1    3   
-1   -1   -0   -0    1    1   -0   -0   -5   

1.0
0    3   1   0    2    0    -2   0    8   
0    5   0   1   11    0   -11   0   13   
1    0   0   0   -1    0     1   0    2   
0    1   0   0    0   -1     0   1    3   
0   -1   0   0    0    1     1   0   -3   

5.0
0   0   1   -0.6   -4.6    0    4.6   0    0.2   
0   1   0    0.2    2.2    0   -2.2   0    2.6   
1   0   0      0     -1    0      1   0      2   
0   0   0   -0.2   -2.2   -1    2.2   1    0.4   
0   0   0    0.2    2.2    1   -1.2   0   -0.4   

4.6
0   0    0.217391    -0.130435   -1    0   1   0   0.0434783   
0   1    0.478261   -0.0869565    0    0   0   0     2.69565   
1   0   -0.217391     0.130435    0    0   0   0     1.95652   
0   0   -0.478261    0.0869565    0   -1   0   1    0.304348   
0   0     0.26087    0.0434783    1    1   0   0   -0.347826   

-0.3478260869565216
The original problem is infeasible!


[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

1.0
0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

1.0
0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0    0   0   0   12   
11   5   0   1    0    0   0   0   35   
 1   0   0   0   -1    0   1   0    2   
 0   1   0   0    0   -1   0   1    3   
 0   0   0   0    0    0   1   1    0   

 2    3    1    0    0    0    0    0   12   
11    5    0    1    0    0    0    0   35   
 1    0    0    0   -1    0    1    0    2   
 0    1    0    0    0   -1    0    1    3   
-1   -1   -0   -0    1    1   -0   -0   -5   

0    3   1   0    2    0    -2   0    8   
0    5   0   1   11    0   -11   0   13   
1    0   0   0   -1    0     1   0    2   
0    1   0   0    0   -1     0   1    3   
0   -1   0   0    0    1     1   0   -3   

0   0   1   -0.6   -4.6    0    4.6   0    0.2   
0   1   0    0.2    2.2    0   -2.2   0    2.6   
1   0   0      0     -1    0      1   0      2   
0   0   0   -0.2   -2.2   -1    2.2   1    0.4   
0   0   0    0.2    2.2    1   -1.2   0   -0.4   

0   0    0.217391    -0.130435   -1    0   1   0   0.0434783   
0   1    0.478261   -0.0869565    0    0   0   0     2.69565   
1   0   -0.217391     0.130435    0    0   0   0     1.95652   
0   0   -0.478261    0.0869565    0   -1   0   1    0.304348   
0   0     0.26087    0.0434783    1    1   0   0   -0.347826   

-0.3478260869565216
The original problem is infeasible!


[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 2   3   1   0   0   0   
11   5   0   1   0   0   
 1   0   0   0   1   0   
 0   1   0   0   0   1   
debug
 2   3   1   0   0   0   
11   5   0   1   0   0   
 1   0   0   0   1   0   
 0   1   0   0   0   1   
 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 2   3   1   0   0   0   
11   5   0   1   0   0   
 1   0   0   0   1   0   
 0   1   0   0   0   1   

debug
 2   3   1   0   0   0   
11   5   0   1   0   0   
 1   0   0   0   1   0   
 0   1   0   0   0   1   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[1. 0. 0. 0.]
[0. 1. 0. 0.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
debug loop
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
 0.666667   0    0.333333   0   0    1   0   

debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
 0.666667   0    0.333333   0   0    1   0   

[0. 0. 0. 1. 0.]
[1. 0. 0. 0. 0.]
[0. 0. 0. 1. 0.]
[0. 1. 0. 0. 0.]
[0. 0. 0. 1. 0.]
[0. 0. 1. 0. 0.]
[0. 0. 0. 1. 0.]
[0. 0. 0. 1. 0.]
[0. 0. 0. 1. 0.]
[0. 0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
 0.666667   0    0.333333   0   0    1   0   

[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 0. 0. 0.]
[1. 0. 0. 0.]
[1. 0. 0. 0.]
[0. 1. 0. 0.]
[1. 0. 0. 0.]
[0. 0. 1. 0.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   0   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

0    1    0.333333   0   -0.666667    0    3.33333   
0    0    -1.66667   1    -7.66667    0    7.33333   
1    0           0   0           1    0          1   
0    0   -0.333333   0    0.666667   -1   0.666667   
0   -5           0   0           4    0          4   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 0. 0. 0.]
[1. 0. 0. 0.]
[1. 0. 0. 0.]
[0. 1. 0. 0.]
[1. 0. 0. 0.]
[0. 0. 1. 0.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   0   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

0    1    0.333333   0   -0.666667    0    3.33333   
0    0    -1.66667   1    -7.66667    0    7.33333   
1    0           0   0           1    0          1   
0    0   -0.333333   0    0.666667   -1   0.666667   
0   -5           0   0           4    0          4   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 2. 0. 0.]
[1. 0. 0. 0.]
[1. 2. 0. 0.]
[0. 1. 0. 0.]
[1. 2. 0. 0.]
[0. 0. 1. 0.]
[1. 2. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 2. 0. 0.]
[1. 0. 0. 0.]
[1. 2. 0. 0.]
[0. 1. 0. 0.]
[1. 2. 0. 0.]
[0. 0. 1. 0.]
[1. 2. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 2. 0. 0.]
[1. 0. 0. 0.]
[1. 2. 0. 0.]
[0. 1. 0. 0.]
[1. 2. 0. 0.]
[0. 0. 1. 0.]
[1. 2. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[1. 2. 0. 0.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[0. 0. 0. 1.]
[1. 2. 0. 0.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[0. 0. 0. 1.]
[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 1.]
[0. 1. 0. 0.]
[0. 0. 0. 1.]
[0. 0. 1. 0.]
[0. 0. 0. 1.]
[0. 0. 0. 1.]
[1. 2. 0. 0.]
[1. 2. 0. 0.]
[1. 0. 0. 0.]
[1. 2. 0. 0.]
[0. 1. 0. 0.]
[1. 2. 0. 0.]
[0. 0. 1. 0.]
[1. 2. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[0. 0. 0. 1.]
[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 0.]
[0. 1. 0. 0.]
[0. 0. 0. 0.]
[0. 0. 1. 0.]
[0. 0. 0. 0.]
[0. 0. 0. 1.]
[1. 2. 0. 0.]
[1. 2. 0. 0.]
[1. 0. 0. 0.]
[0. 0. 0. 0.]
[0. 1. 0. 0.]
[0. 0. 0. 0.]
[0. 0. 1. 0.]
[0. 0. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   0   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
[0. 0. 0. 0.]
[0. 1. 0. 0.]
[0. 0. 0. 0.]
[0. 0. 1. 0.]
[0. 0. 0. 0.]
[0. 0. 0. 1.]
[1. 2. 0. 0.]
[1. 0. 0. 0.]
[0. 0. 0. 0.]
[0. 1. 0. 0.]
[0. 0. 0. 0.]
[0. 0. 1. 0.]
[0. 0. 0. 0.]
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   0   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

[0. 0. 0. 1.]
[1. 0. 0. 0.]
removed
[0. 0. 0. 0.]
[0. 1. 0. 0.]
removed
[0. 0. 0. 0.]
[0. 0. 1. 0.]
removed
[0. 0. 0. 0.]
[0. 0. 0. 1.]
removed
[1. 2. 0. 0.]
[1. 0. 0. 0.]
removed
[0. 0. 0. 0.]
[0. 1. 0. 0.]
removed
[0. 0. 0. 0.]
[0. 0. 1. 0.]
removed
[0. 0. 0. 0.]
[0. 0. 0. 1.]
removed
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   0   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

a
[0. 0. 0. 1.]
[1. 0. 0. 0.]
removed
a
[0. 0. 0. 0.]
[0. 1. 0. 0.]
removed
a
[0. 0. 0. 0.]
[0. 0. 1. 0.]
removed
a
[0. 0. 0. 0.]
[0. 0. 0. 1.]
removed
a
[1. 2. 0. 0.]
[1. 0. 0. 0.]
removed
a
[0. 0. 0. 0.]
[0. 1. 0. 0.]
removed
a
[0. 0. 0. 0.]
[0. 0. 1. 0.]
removed
a
[0. 0. 0. 0.]
[0. 0. 0. 1.]
removed
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   0   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

6
a
[0. 0. 0. 1.]
eye
[1. 0. 0. 0.]
removed
6
a
[0. 0. 0. 0.]
eye
[0. 1. 0. 0.]
removed
6
a
[0. 0. 0. 0.]
eye
[0. 0. 1. 0.]
removed
6
a
[0. 0. 0. 0.]
eye
[0. 0. 0. 1.]
removed
7
a
[1. 2. 0. 0.]
eye
[1. 0. 0. 0.]
removed
7
a
[0. 0. 0. 0.]
eye
[0. 1. 0. 0.]
removed
7
a
[0. 0. 0. 0.]
eye
[0. 0. 1. 0.]
removed
7
a
[0. 0. 0. 0.]
eye
[0. 0. 0. 1.]
removed
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   0   0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

6
a
[0. 0. 0. 1.]
eye
[1. 0. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 1. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 1. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 0. 1.]
debug loop
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

7
a
[1. 2. 0. 0.]
eye
[1. 0. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 1. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 1. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 0. 1.]
debug after
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   2   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

6
a
[0. 0. 0. 1.]
eye
[1. 0. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 1. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 1. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 0. 1.]
debug loop
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

7
a
[1. 2. 0. 0.]
eye
[1. 0. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 1. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 1. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 0. 1.]
removed
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 2   3   1   0   0   0   1   
11   5   0   1   0   0   2   
 1   0   0   0   1   0   0   
 0   1   0   0   0   1   0   

6
a
[1. 2. 0. 0.]
eye
[1. 0. 0. 0.]
6
a
[1. 2. 0. 0.]
eye
[0. 1. 0. 0.]
6
a
[1. 2. 0. 0.]
eye
[0. 0. 1. 0.]
6
a
[1. 2. 0. 0.]
eye
[0. 0. 0. 1.]
removed
debug after
 2   3   1   0   0   0   0   
11   5   0   1   0   0   0   
 1   0   0   0   1   0   0   
 0   1   0   0   0   1   0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

6
a
[0. 0. 0. 1.]
eye
[1. 0. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 1. 0. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 1. 0.]
6
a
[0. 0. 0. 1.]
eye
[0. 0. 0. 1.]
debug loop
 0.666667   1    0.333333   0   0    0   0   1   
  7.66667   0    -1.66667   1   0    0   0   2   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

7
a
[1. 2. 0. 0.]
eye
[1. 0. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 1. 0. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 1. 0.]
7
a
[1. 2. 0. 0.]
eye
[0. 0. 0. 1.]
removed
debug after
 0.666667   1    0.333333   0   0    0   0   0   
  7.66667   0    -1.66667   1   0    0   0   0   
        1   0           0   0   1    0   0   0   
-0.666667   0   -0.333333   0   0   -1   1   0   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[False False False False False  True False]
 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[ True  True  True  True  True False  True]
 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[False False False False]
 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[[ 0.66666667  1.          0.33333333  0.          0.          0.        ]
 [ 7.66666667  0.         -1.66666667  1.          0.          0.        ]
 [ 1.          0.          0.          0.          1.          0.        ]
 [-0.66666667  0.         -0.33333333  0.          0.          1.        ]]
 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[[ 0.66666667  1.          0.33333333  0.          0.          0.
   0.        ]
 [ 7.66666667  0.         -1.66666667  1.          0.          0.
   0.        ]
 [ 1.          0.          0.          0.          1.          0.
   0.        ]
 [-0.66666667  0.         -0.33333333  0.          0.         -1.
   1.        ]]
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[False False False False False False False  True]
[[ 0.66666667  1.          0.33333333  0.          0.          0.
   0.        ]
 [ 7.66666667  0.         -1.66666667  1.          0.          0.
   0.        ]
 [ 1.          0.          0.          0.          1.          0.
   0.        ]
 [-0.66666667  0.         -0.33333333  0.          0.         -1.
   1.        ]]
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0   1    4   
 7.6667    0   -1.6667   1   0    0   0   0   15   
      1    0         0   0   1    0   0   0    1   
-0.6667    0   -0.3333   0   0   -1   1   0    0   
     -4   -5         0   0   0    0   0   0    0   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

0    1    0.333333   0   -0.666667    0    3.33333   
0    0    -1.66667   1    -7.66667    0    7.33333   
1    0           0   0           1    0          1   
0    0   -0.333333   0    0.666667   -1   0.666667   
0   -5           0   0           4    0          4   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
debug
 0.666667   1    0.333333   0   0   0   
  7.66667   0    -1.66667   1   0   0   
        1   0           0   0   1   0   
-0.666667   0   -0.333333   0   0   1   

 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[ 0.  0.  0. -1.]
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0   0   
  7.66667   0    -1.66667   1   0   0   
        1   0           0   0   1   0   
-0.666667   0   -0.333333   0   0   1   

 0.6667    1    0.3333   0   0   0    4   
 7.6667    0   -1.6667   1   0   0   15   
      1    0         0   0   1   0    1   
-0.6667    0   -0.3333   0   0   1    0   
     -4   -5         0   0   0   0    0   

 0.6667   1    0.3333   0   0   0    4   
 7.6667   0   -1.6667   1   0   0   15   
      1   0         0   0   1   0    1   
-0.6667   0   -0.3333   0   0   1    0   
-0.6667   0    1.6667   0   0   0   20   

0   1    0.333333   0   -0.666667   0    3.33333   
0   0    -1.66667   1    -7.66667   0    7.33333   
1   0           0   0           1   0          1   
0   0   -0.333333   0    0.666667   1   0.666667   
0   0     1.66667   0    0.666667   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0.666667   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[0. 0. 0. 2.]
debug
 0.666667   1    0.333333   0   0    0   
  7.66667   0    -1.66667   1   0    0   
        1   0           0   0   1    0   
-0.666667   0   -0.333333   0   0   -1   

 0.6667    1    0.3333   0   0    0    4   
 7.6667    0   -1.6667   1   0    0   15   
      1    0         0   0   1    0    1   
-0.6667    0   -0.3333   0   0   -1    0   
     -4   -5         0   0   0    0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[0. 0. 0. 1.]
debug
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

debug #2
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   

 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[0. 0. 0. 1.]
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam)
 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
[[ 0.6667  1.      0.3333  0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.     20.    ]]

 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

row one
3
ovde sam
 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
6
 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
0
j
0
j
0
j
0
j
0
 0   0    4   
 0   0   15   
 0   0    1   
-1   1    0   
 0   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
(array([0, 1, 2]),)
1     1.5    0.5   0   0    0     6   
0   -11.5   -5.5   1   0    0   -31   
0    -1.5   -0.5   0   1    0    -5   
0       1      0   0   0   -1     4   
0       1      2   0   0    0    24   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
6   0   0   -31   -5   0   
max_f: 24.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
 0.6667   1    0.3333   0   0    0    4   
 7.6667   0   -1.6667   1   0    0   15   
      1   0         0   0   1    0    1   
-0.6667   0   -0.3333   0   0   -1    0   
-0.6667   0    1.6667   0   0    0   20   

0   1    0.333333   0   -0.666667    0    3.33333   
0   0    -1.66667   1    -7.66667    0    7.33333   
1   0           0   0           1    0          1   
0   0   -0.333333   0    0.666667   -1   0.666667   
0   0     1.66667   0    0.666667    0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
5
j
5
 0.6667   1    0.3333   0   0    4   
 7.6667   0   -1.6667   1   0   15   
      1   0         0   0   1    1   
-0.6667   0   -0.3333   0   0    0   
-0.6667   0    1.6667   0   0   20   

0   1    0.333333   0   -0.666667    3.33333   
0   0    -1.66667   1    -7.66667    7.33333   
1   0           0   0           1          1   
0   0   -0.333333   0    0.666667   0.666667   
0   0     1.66667   0    0.666667    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
j
5
j
4
2 4
(array([0, 4]),)
j
3
j
2
0   1    3.3333   
0   0    7.3333   
1   0         1   
0   0    0.6667   
0   0   20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
ovde sam
j
6
j
6
j
6
j
6
3 6
(array([0, 2, 5, 6]),)
j
6
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
j
6
j
5
j
4
2 4
(array([0, 4]),)
j
3
j
2
 0.6667   1    4   
 7.6667   0   15   
      1   0    1   
-0.6667   0    0   
-0.6667   0   20   

0   1    3.33333   
0   0    7.33333   
1   0          1   
0   0   0.666667   
0   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
0
6 7
j
6
1
5 6
j
5
2
4 5
j
4
2 4
(array([0, 4]),)
3
3 4
j
3
4
2 3
j
2
 0.6667   1    4   
 7.6667   0   15   
      1   0    1   
-0.6667   0    0   
-0.6667   0   20   

0   1    3.33333   
0   0    7.33333   
1   0          1   
0   0   0.666667   
0   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
6 7
j 6
i 1
5 6
j 5
i 2
4 5
j 4
2 4
column_r (array([0, 4]),)
i 3
3 4
j 3
i 4
2 3
j 2
 0.6667   1    4   
 7.6667   0   15   
      1   0    1   
-0.6667   0    0   
-0.6667   0   20   

0   1    3.33333   
0   0    7.33333   
1   0          1   
0   0   0.666667   
0   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
i 1
j 5
i 2
j 4
2 4
column_r (array([0, 4]),)
i 3
j 3
i 4
j 2
 0.6667   1    4   
 7.6667   0   15   
      1   0    1   
-0.6667   0    0   
-0.6667   0   20   

0   1    3.33333   
0   0    7.33333   
1   0          1   
0   0   0.666667   
0   0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
i 4
j 6
ovde sam
i 0
j 6
i 1
j 6
i 2
j 6
i 3
j 6
3 6
column_r [[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.     20.    ]]

i 1
j 5
[[ 0.6667  1.      0.3333  0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.      0.    ]
 [-0.6667  0.      1.6667  0.      0.     20.    ]]

i 2
j 4
2 4
column_r (array([0, 4]),)
[[ 0.      1.      0.3333  0.      4.    ]
 [ 0.      0.     -1.6667  1.     15.    ]
 [ 1.      0.      0.      0.      1.    ]
 [ 0.      0.     -0.3333  0.      0.    ]
 [ 0.      0.      1.6667  0.     20.    ]]

i 3
j 3
[[ 0.      1.      0.3333  4.    ]
 [ 0.      0.     -1.6667 15.    ]
 [ 1.      0.      0.      1.    ]
 [ 0.      0.     -0.3333  0.    ]
 [ 0.      0.      1.6667 20.    ]]

i 4
j 2
[[ 0.  1.  4.]
 [ 0.  0. 15.]
 [ 1.  0.  1.]
 [ 0.  0.  0.]
 [ 0.  0. 20.]]

0   1    4   
0   0   15   
1   0    1   
0   0    0   
0   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   4   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.     20.    ]]

i 1
j 5
[[ 0.6667  1.      0.3333  0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.      0.    ]
 [-0.6667  0.      1.6667  0.      0.     20.    ]]

i 2
j 4
2 4
column_r (array([0, 4]),)
[[ 0.      1.      0.3333  0.      4.    ]
 [ 0.      0.     -1.6667  1.     15.    ]
 [ 1.      0.      0.      0.      1.    ]
 [ 0.      0.     -0.3333  0.      0.    ]
 [ 0.      0.      1.6667  0.     20.    ]]

i 3
i 4
0   1    0.3333   0    4   
0   0   -1.6667   1   15   
1   0         0   0    1   
0   0   -0.3333   0    0   
0   0    1.6667   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   4   0   15   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.     20.    ]]

i 1
j 5
[[ 0.6667  1.      0.3333  0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.      0.    ]
 [-0.6667  0.      1.6667  0.      0.     20.    ]]

i 2
j 4
2 4
column_r (array([0, 4]),)
1.0
[[ 0.      1.      0.3333  0.      4.    ]
 [ 0.      0.     -1.6667  1.     15.    ]
 [ 1.      0.      0.      0.      1.    ]
 [ 0.      0.     -0.3333  0.      0.    ]
 [ 0.      0.      1.6667  0.     20.    ]]

i 3
i 4
0   1    0.3333   0    4   
0   0   -1.6667   1   15   
1   0         0   0    1   
0   0   -0.3333   0    0   
0   0    1.6667   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   4   0   15   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.     20.    ]]

i 1
j 5
[[ 0.6667  1.      0.3333  0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.      0.    ]
 [-0.6667  0.      1.6667  0.      0.     20.    ]]

i 2
j 4
2 4
column_r (array([0, 4]),)
 0.666667   1    0.333333   0   0   
  7.66667   0    -1.66667   1   0   
        1   0           0   0   1   
-0.666667   0   -0.333333   0   0   
-0.666667   0     1.66667   0   0   
1.0
[[ 0.      1.      0.3333  0.      4.    ]
 [ 0.      0.     -1.6667  1.     15.    ]
 [ 1.      0.      0.      0.      1.    ]
 [ 0.      0.     -0.3333  0.      0.    ]
 [ 0.      0.      1.6667  0.     20.    ]]

i 3
i 4
0   1    0.3333   0    4   
0   0   -1.6667   1   15   
1   0         0   0    1   
0   0   -0.3333   0    0   
0   0    1.6667   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   4   0   15   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 1
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 2
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
-0.6666666666666666
[[ 0.      1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 0.      0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 0.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [ 0.      0.      1.6667  0.      0.      0.      0.     20.    ]]

i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1
i 2
i 3
i 4
ovde sam
i 0
i 1[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 1
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 2
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
-0.6666666666666666
[[ 0.      1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 0.      0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 0.      0.      0.      0.      1.      0.      0.      1.    ]
 [ 1.     -0.      0.5    -0.     -0.      1.5    -1.5     0.    ]
 [ 0.      0.      1.6667  0.      0.      0.      0.     20.    ]]

i 4
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 1
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 2
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
-0.6666666666666666
[[ 0.      1.      0.3333  0.      0.      0.      4.    ]
 [ 0.      0.     -1.6667  1.      0.      0.     15.    ]
 [ 0.      0.      0.      0.      1.      0.      1.    ]
 [ 1.     -0.      0.5    -0.     -0.      1.5     0.    ]
 [ 0.      0.      1.6667  0.      0.      0.     20.    ]]

i 4
0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

ovde sam
i 0
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 1
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 2
j 6
[[ 0.6667  1.      0.3333  0.      0.      0.      0.      4.    ]
 [ 7.6667  0.     -1.6667  1.      0.      0.      0.     15.    ]
 [ 1.      0.      0.      0.      1.      0.      0.      1.    ]
 [-0.6667  0.     -0.3333  0.      0.     -1.      1.      0.    ]
 [-0.6667  0.      1.6667  0.      0.      0.      0.     20.    ]]

i 3
j 6
3 6
column_r (array([0, 2, 5, 6]),)
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
-0.6666666666666666
[[ 0.      1.      0.3333  0.      0.      0.      4.    ]
 [ 0.      0.     -1.6667  1.      0.      0.     15.    ]
 [ 0.      0.      0.      0.      1.      0.      1.    ]
 [ 1.     -0.      0.5    -0.     -0.      1.5     0.    ]
 [ 0.      0.      1.6667  0.      0.      0.     20.    ]]

i 4
0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0         0    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.6667    1        0    0    0      -1    4   
 7.6667    0     -5.5    1    0   -11.5   15   
      1    0     -0.5    0    1    -1.5    1   
      1   -0      0.5   -0   -0     1.5    0   
-0.6667    0   1.1667    0    0    -1.5   20   

0    1   -0.333333    0    0     -2    4   
0    0    -9.33333    1    0    -23   15   
0    0          -1    0    1     -3    1   
1   -0         0.5   -0   -0    1.5    0   
0    0         1.5    0    0   -0.5   20   

 1.33333    1   0.333333    0    0   0    4   
 15.3333    0   -1.66667    1    0   0   15   
       2    0          0    0    1   0    1   
0.666667   -0   0.333333   -0   -0   1    0   
0.333333    0    1.66667    0    0   0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
0    1    0.3333    0    0     0    4   
0    0   -1.6667    1    0     0   15   
0    0         0    0    1     0    1   
1   -0       0.5   -0   -0   1.5    0   
0    0    1.6667    0    0     0   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
 0.6667   1         0   0   0      -1    4   
 7.6667   0      -5.5   1   0   -11.5   15   
      1   0      -0.5   0   1    -1.5    1   
-0.6667   0   -0.3333   0   0      -1    0   
-0.6667   0         2   0   0       1   20   

0   1    0.333333   0   -0.666667      0    3.33333   
0   0    -1.66667   1    -7.66667      0    7.33333   
1   0        -0.5   0           1   -1.5          1   
0   0   -0.666667   0    0.666667     -2   0.666667   
0   0     1.66667   0    0.666667      0    20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[ 1.  -0.   0.5 -0.  -0.   1.5 -1.5]
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[-1.5   0.   -0.75  0.    0.   -2.25  2.25]
[[  0.66666667   1.           0.           0.           0.
   -1.           1.        ]
 [  7.66666667   0.          -5.5          1.           0.
  -11.5         11.5       ]
 [  1.           0.          -0.5          0.           1.
   -1.5          1.5       ]
 [  1.          -0.           0.5         -0.          -0.
    1.5         -1.5       ]
 [ -0.66666667   0.           2.           0.           0.
    1.          -1.        ]]
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[-1.5   0.   -0.75  0.    0.   -2.25  2.25]
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[-1.5   0.   -0.75  0.    0.   -2.25  2.25]
 0.666667    1      0    0    0      -1      1   
  7.66667    0   -5.5    1    0   -11.5   11.5   
        1    0   -0.5    0    1    -1.5    1.5   
        1   -0    0.5   -0   -0     1.5   -1.5   
-0.666667    0      2    0    0       1     -1   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[0. 0. 0. 0. 0.]]
 0.6667    1      0    0    0      -1    4   
 7.6667    0   -5.5    1    0   -11.5   15   
      1    0   -0.5    0    1    -1.5    1   
      1   -0    0.5   -0   -0     1.5    0   
-0.6667    0      2    0    0       1   20   

0    1   -0.333333    0    0    -2    4   
0    0    -9.33333    1    0   -23   15   
0    0          -1    0    1    -3    1   
1   -0         0.5   -0   -0   1.5    0   
0    0     2.33333    0    0     2   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[0.]
 [0.]
 [0.]
 [0.]
 [0.]]
 0.6667    1      0    0    0      -1    4   
 7.6667    0   -5.5    1    0   -11.5   15   
      1    0   -0.5    0    1    -1.5    1   
      1   -0    0.5   -0   -0     1.5    0   
-0.6667    0      2    0    0       1   20   

0    1   -0.333333    0    0    -2    4   
0    0    -9.33333    1    0   -23   15   
0    0          -1    0    1    -3    1   
1   -0         0.5   -0   -0   1.5    0   
0    0     2.33333    0    0     2   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[0.]
 [0.]
 [0.]
 [0.]
 [0.]]
 0.6667    1      0    0    0      -1    4   
 7.6667    0   -5.5    1    0   -11.5   15   
      1    0   -0.5    0    1    -1.5    1   
      1   -0    0.5   -0   -0     1.5    0   
-0.6667    0      2    0    0       1   20   

0    1   -0.333333    0    0    -2    4   
0    0    -9.33333    1    0   -23   15   
0    0          -1    0    1    -3    1   
1   -0         0.5   -0   -0   1.5    0   
0    0     2.33333    0    0     2   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[0.]
 [0.]
 [0.]
 [0.]
 [0.]]
 0.6667    1      0    0    0      -1    4   
 7.6667    0   -5.5    1    0   -11.5   15   
      1    0   -0.5    0    1    -1.5    1   
      1   -0    0.5   -0   -0     1.5    0   
-0.6667    0      2    0    0       1   20   

0    1   -0.333333    0    0    -2    4   
0    0    -9.33333    1    0   -23   15   
0    0          -1    0    1    -3    1   
1   -0         0.5   -0   -0   1.5    0   
0    0     2.33333    0    0     2   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
[[0.]
 [0.]
 [0.]
 [0.]
 [0.]]
0    1      0    0    0      -1    4   
0    0   -5.5    1    0   -11.5   15   
0    0   -0.5    0    1    -1.5    1   
1   -0    0.5   -0   -0     1.5    0   
0    0      2    0    0       1   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
0    1      0    0    0      -1    4   
0    0   -5.5    1    0   -11.5   15   
0    0   -0.5    0    1    -1.5    1   
1   -0    0.5   -0   -0     1.5    0   
0    0      2    0    0       1   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.666667   1    0.333333   0   0    0   0   
  7.66667   0    -1.66667   1   0    0   0   
        1   0           0   0   1    0   0   
-0.666667   0   -0.333333   0   0   -1   1   
-0.666667   0     1.66667   0   0    0   0   
0    1      0    0    0      -1    4   
0    0   -5.5    1    0   -11.5   15   
0    0   -0.5    0    1    -1.5    1   
1   -0    0.5   -0   -0     1.5    0   
0    0      2    0    0       1   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1      0    0    0      -1    4   
0    0   -5.5    1    0   -11.5   15   
0    0   -0.5    0    1    -1.5    1   
1   -0    0.5   -0   -0     1.5    0   
0    0      2    0    0       1   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]] [12, 35] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   12   
11   5   0   1   35   
 0   0   0   0    0   

 2    3    1    0   12   
11    5    0    1   35   
-0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   12   
11    5   0   1   35   
-4   -5   0   0    0   

 2    3   1   0   12   
11    5   0   1   35   
-4   -5   0   0    0   

0    2.09091   1   -0.181818   5.63636   
1   0.454545   0   0.0909091   3.18182   
0   -3.18182   0    0.363636   12.7273   

0   1    0.478261   -0.0869565   2.69565   
1   0   -0.217391     0.130435   1.95652   
0   0     1.52174    0.0869565   21.3043   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
******************************
Optimal solution is: 
1.95652   2.69565   0   0   
max_f: 21.304347826086953
******************************



[[ 2  3]
 [11  5]
 [ 1  0]] [12, 35, 1] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   12   
11   5   0   1   0   35   
 1   0   0   0   1    1   
 0   0   0   0   0    0   

 2    3    1    0    0   12   
11    5    0    1    0   35   
 1    0    0    0    1    1   
-0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   12   
11    5   0   1   0   35   
 1    0   0   0   1    1   
-4   -5   0   0   0    0   

 2    3   1   0   0   12   
11    5   0   1   0   35   
 1    0   0   0   1    1   
-4   -5   0   0   0    0   

0    3   1   0    -2   10   
0    5   0   1   -11   24   
1    0   0   0     1    1   
0   -5   0   0     4    4   

0   1   0.333333   0   -0.666667   3.33333   
0   0   -1.66667   1    -7.66667   7.33333   
1   0          0   0           1         1   
0   0    1.66667   0    0.666667   20.6667   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
******************************
Optimal solution is: 
1   3.33333   0   7.33333   0   
max_f: 20.666666666666668
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0   0   12   
11   5   0   1   0   0   35   
 1   0   0   0   1   0    1   
 0   1   0   0   0   1    3   
 0   0   0   0   0   0    0   

 2    3    1    0    0    0   12   
11    5    0    1    0    0   35   
 1    0    0    0    1    0    1   
 0    1    0    0    0    1    3   
-0   -0   -0   -0   -0   -0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

 2    3   1   0   0   0   12   
11    5   0   1   0   0   35   
 1    0   0   0   1   0    1   
 0    1   0   0   0   1    3   
-4   -5   0   0   0   0    0   

0    3   1   0    -2   0   10   
0    5   0   1   -11   0   24   
1    0   0   0     1   0    1   
0    1   0   0     0   1    3   
0   -5   0   0     4   0    4   

0   0   1   0    -2   -3    1   
0   0   0   1   -11   -5    9   
1   0   0   0     1    0    1   
0   1   0   0     0    1    3   
0   0   0   0     4    5   19   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    <= 3
******************************
Optimal solution is: 
1   3   1   9   0   0   
max_f: 19.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 1, 4] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0   0    0   0   12   
11   5   0   1   0    0   0   35   
 1   0   0   0   1    0   0    1   
 0   1   0   0   0   -1   1    4   
 0   0   0   0   0    0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0    1    0    0    1   
 0    1    0    0    0   -1    1    4   
-0   -1   -0   -0   -0    1   -0   -4   

 0.666667   1    0.333333   0   0    0   0    4   
  7.66667   0    -1.66667   1   0    0   0   15   
        1   0           0   0   1    0   0    1   
-0.666667   0   -0.333333   0   0   -1   1    0   
 0.666667   0    0.333333   0   0    1   0    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0.6667    1    0.3333   0   0    0   0    4   
 7.6667    0   -1.6667   1   0    0   0   15   
      1    0         0   0   1    0   0    1   
-0.6667    0   -0.3333   0   0   -1   1    0   
     -4   -5         0   0   0    0   0    0   

0    1      0    0    0      -1    4   
0    0   -5.5    1    0   -11.5   15   
0    0   -0.5    0    1    -1.5    1   
1   -0    0.5   -0   -0     1.5    0   
0    0      2    0    0       1   20   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    <= 1
0   1    >= 4
******************************
Optimal solution is: 
0   4   0   15   1   0   
max_f: 20.0
******************************



[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0    0   0   0   12   
11   5   0   1    0    0   0   0   35   
 1   0   0   0   -1    0   1   0    2   
 0   1   0   0    0   -1   0   1    3   
 0   0   0   0    0    0   1   1    0   

 2    3    1    0    0    0    0    0   12   
11    5    0    1    0    0    0    0   35   
 1    0    0    0   -1    0    1    0    2   
 0    1    0    0    0   -1    0    1    3   
-1   -1   -0   -0    1    1   -0   -0   -5   

0    3   1   0    2    0    -2   0    8   
0    5   0   1   11    0   -11   0   13   
1    0   0   0   -1    0     1   0    2   
0    1   0   0    0   -1     0   1    3   
0   -1   0   0    0    1     1   0   -3   

0   0   1   -0.6   -4.6    0    4.6   0    0.2   
0   1   0    0.2    2.2    0   -2.2   0    2.6   
1   0   0      0     -1    0      1   0      2   
0   0   0   -0.2   -2.2   -1    2.2   1    0.4   
0   0   0    0.2    2.2    1   -1.2   0   -0.4   

0   0    0.217391    -0.130435   -1    0   1   0   0.0434783   
0   1    0.478261   -0.0869565    0    0   0   0     2.69565   
1   0   -0.217391     0.130435    0    0   0   0     1.95652   
0   0   -0.478261    0.0869565    0   -1   0   1    0.304348   
0   0     0.26087    0.0434783    1    1   0   0   -0.347826   

-0.3478260869565216
The original problem is infeasible!


[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 3] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.greater: 1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0    0   0   0   12   
11   5   0   1    0    0   0   0   35   
 1   0   0   0   -1    0   1   0    2   
 0   1   0   0    0   -1   0   1    3   
 0   0   0   0    0    0   1   1    0   

 2    3    1    0    0    0    0    0   12   
11    5    0    1    0    0    0    0   35   
 1    0    0    0   -1    0    1    0    2   
 0    1    0    0    0   -1    0    1    3   
-1   -1   -0   -0    1    1   -0   -0   -5   

0    3   1   0    2    0    -2   0    8   
0    5   0   1   11    0   -11   0   13   
1    0   0   0   -1    0     1   0    2   
0    1   0   0    0   -1     0   1    3   
0   -1   0   0    0    1     1   0   -3   

0   0   1   -0.6   -4.6    0    4.6   0    0.2   
0   1   0    0.2    2.2    0   -2.2   0    2.6   
1   0   0      0     -1    0      1   0      2   
0   0   0   -0.2   -2.2   -1    2.2   1    0.4   
0   0   0    0.2    2.2    1   -1.2   0   -0.4   

0   0    0.217391    -0.130435   -1    0   1   0   0.0434783   
0   1    0.478261   -0.0869565    0    0   0   0     2.69565   
1   0   -0.217391     0.130435    0    0   0   0     1.95652   
0   0   -0.478261    0.0869565    0   -1   0   1    0.304348   
0   0     0.26087    0.0434783    1    1   0   0   -0.347826   

-0.3478260869565216
The original problem is infeasible!


[[ 2  3]
 [11  5]
 [ 1  0]
 [ 0  1]] [12, 35, 2, 2] [-4 -5] [<RelationSymbols.less: -1>, <RelationSymbols.less: -1>, <RelationSymbols.greater: 1>, <RelationSymbols.less: -1>] 2
*****************************************
*************** PHASE ONE ***************
*****************************************
 2   3   1   0    0   0   0   12   
11   5   0   1    0   0   0   35   
 1   0   0   0   -1   0   1    2   
 0   1   0   0    0   1   0    2   
 0   0   0   0    0   0   1    0   

 2    3    1    0    0    0    0   12   
11    5    0    1    0    0    0   35   
 1    0    0    0   -1    0    1    2   
 0    1    0    0    0    1    0    2   
-1   -0   -0   -0    1   -0   -0   -2   

0   3   1   0    2   0    -2    8   
0   5   0   1   11   0   -11   13   
1   0   0   0   -1   0     1    2   
0   1   0   0    0   1     0    2   
0   0   0   0    0   0     1    0   

*****************************************
*************** PHASE TWO ***************
*****************************************
 0    3   1   0    2   0    8   
 0    5   0   1   11   0   13   
 1    0   0   0   -1   0    2   
 0    1   0   0    0   1    2   
-4   -5   0   0    0   0    0   

0    3   1   0    2   0    8   
0    5   0   1   11   0   13   
1    0   0   0   -1   0    2   
0    1   0   0    0   1    2   
0   -5   0   0   -4   0    8   

0   0   1   0    2   -3    2   
0   0   0   1   11   -5    3   
1   0   0   0   -1    0    2   
0   1   0   0    0    1    2   
0   0   0   0   -4    5   18   

0   0   1   -0.181818   0    -2.09091    1.45455   
0   0   0   0.0909091   1   -0.454545   0.272727   
1   0   0   0.0909091   0   -0.454545    2.27273   
0   1   0           0   0           1          2   
0   0   0    0.363636   0     3.18182    19.0909   

******************************
Input:
(max) c = [4 5]
subject to: 
2   3    <= 12
11   5    <= 35
1   0    >= 2
0   1    <= 2
******************************
Optimal solution is: 
2.27273   2   1.45455   0   0.272727   0   
max_f: 19.09090909090909
******************************



