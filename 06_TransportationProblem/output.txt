***********************************
Input:
***********************************
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 3  9  8 10  4 28]
 [ 6 10  3  2  3 13]
 [ 3  2  7 10  3 19]
 [ 3  2  3  2  8 18]]
 [24 16 10 20 22]


***********************************
Initial solution found using minimum-cost method:
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop: 
[[24.  0.  0.  0.  4.]
 [ 0.  0.  0. 13.  0.]
 [ 0. 16.  0.  0.  3.]
 [ 0.  0. 10.  7.  1.]
 [ 0.  0.  0.  0. 14.]]


***********************************
Method of potentials, step by step
***********************************
14
[[24.  0.  0.  0.  4.]
 [ 0.  0.  0. 13.  0.]
 [ 0. 16.  0.  0.  3.]
 [ 0.  0. 10.  7.  1.]
 [ 0.  0.  0.  0. 14.]]
positions
[14, 13, 33, 34]
--------------
Iteration 1
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 3  9  8 10  4 28]
 [ 6 10  3  2  3 13]
 [ 3  2  7 10  3 19]
 [ 3  2  3  2  8 18]
 [50 50 50 50 50 14]]
 [24 16 10 20 22]
Cycle starting from position (1, 4): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  0. -1.  1.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  1. -1.]
 [ 0.  0.  0.  0.  0.]]
theta = 1.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  0.  0.  4.]
 [ 0.  0.  0. 12.  1.]
 [ 0. 16.  0.  0.  3.]
 [ 0.  0. 10.  8.  0.]
 [ 0.  0.  0.  0. 14.]]
***********************************
Optimal solution found after 1 iterations!
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  0.  0.  4.]
 [ 0.  0.  0. 12.  1.]
 [ 0. 16.  0.  0.  3.]
 [ 0.  0. 10.  8.  0.]
 [ 0.  0.  0.  0. 14.]]
min = 202.0



***********************************
Input:
***********************************
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  0  0  0  0 28]
 [ 4  2  0  1  4 13]
 [ 4  5  6  2  0 19]
 [ 0  0  0  1  0 18]]
 [24 16 10 20 22]


***********************************
Initial solution found using minimum-cost method:
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop: 
[[ 0. 16. 10.  2.  0.]
 [ 0.  0.  0. 13.  0.]
 [ 0.  0.  0.  0. 19.]
 [18.  0.  0.  0.  0.]
 [ 6.  0.  0.  5.  3.]]


***********************************
Method of potentials, step by step
***********************************
12
[[ 0. 16. 10.  2.  0.]
 [ 0.  0.  0. 13.  0.]
 [ 0.  0.  0.  0. 19.]
 [18.  0.  0.  0.  0.]
 [ 6.  0.  0.  5.  3.]]
positions
[12, 13, 3, 2]
--------------
Iteration 1
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  0  0  0  0 28]
 [ 4  2  0  1  4 13]
 [ 4  5  6  2  0 19]
 [ 0  0  0  1  0 18]
 [10 10 10 10 10 14]]
 [24 16 10 20 22]
Cycle starting from position (1, 2): 
[[  0.   0. -10.  10.   0.]
 [  0.   0.  10. -10.   0.]
 [  0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.]]
theta = 10.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[ 0. 16.  0. 12.  0.]
 [ 0.  0. 10.  3.  0.]
 [ 0.  0.  0.  0. 19.]
 [18.  0.  0.  0.  0.]
 [ 6.  0.  0.  5.  3.]]
***********************************
Optimal solution found after 1 iterations!
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[ 0. 16.  0. 12.  0.]
 [ 0.  0. 10.  3.  0.]
 [ 0.  0.  0.  0. 19.]
 [18.  0.  0.  0.  0.]
 [ 6.  0.  0.  5.  3.]]
min = 3.0



***********************************
Input:
***********************************
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  8  5  6  9 28]
 [ 4  2  7  9  4 13]
 [14 25 16 21  5 19]
 [ 3  4  2  6  1 18]]
 [24 16 10 20 22]


***********************************
Initial solution found using minimum-cost method:
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop: 
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  9.  4.]
 [ 0.  0.  0.  0. 18.]
 [ 0.  3.  0. 11.  0.]]


***********************************
Method of potentials, step by step
***********************************
31
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  9.  4.]
 [ 0.  0.  0.  0. 18.]
 [ 0.  3.  0. 11.  0.]]
positions
[31, 34, 24, 23, 43, 41]
--------------
Iteration 1
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  8  5  6  9 28]
 [ 4  2  7  9  4 13]
 [14 25 16 21  5 19]
 [ 3  4  2  6  1 18]
 [70 70 70 70 70 14]]
 [24 16 10 20 22]
Cycle starting from position (3, 1): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0. -3.  3.]
 [ 0.  3.  0.  0. -3.]
 [ 0. -3.  0.  3.  0.]]
theta = 3.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  6.  7.]
 [ 0.  3.  0.  0. 15.]
 [ 0.  0.  0. 14.  0.]]
33
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  6.  7.]
 [ 0.  3.  0.  0. 15.]
 [ 0.  0.  0. 14.  0.]]
positions
[33, 34, 24, 23]
--------------
Iteration 2
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  8  5  6  9 28]
 [ 4  2  7  9  4 13]
 [14 25 16 21  5 19]
 [ 3  4  2  6  1 18]
 [70 70 70 70 70 14]]
 [24 16 10 20 22]
Cycle starting from position (3, 3): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0. -6.  6.]
 [ 0.  0.  0.  6. -6.]
 [ 0.  0.  0.  0.  0.]]
theta = 6.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  0. 13.]
 [ 0.  3.  0.  6.  9.]
 [ 0.  0.  0. 14.  0.]]
32
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  6.  0. 13.]
 [ 0.  3.  0.  6.  9.]
 [ 0.  0.  0. 14.  0.]]
positions
[32, 34, 24, 22]
--------------
Iteration 3
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  8  5  6  9 28]
 [ 4  2  7  9  4 13]
 [14 25 16 21  5 19]
 [ 3  4  2  6  1 18]
 [70 70 70 70 70 14]]
 [24 16 10 20 22]
Cycle starting from position (3, 2): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0. -6.  0.  6.]
 [ 0.  0.  6.  0. -6.]
 [ 0.  0.  0.  0.  0.]]
theta = 6.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  0.  0. 19.]
 [ 0.  3.  6.  6.  3.]
 [ 0.  0.  0. 14.  0.]]
3
[[24.  0.  4.  0.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  0.  0. 19.]
 [ 0.  3.  6.  6.  3.]
 [ 0.  0.  0. 14.  0.]]
positions
[3, 2, 32, 33]
--------------
Iteration 4
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  8  5  6  9 28]
 [ 4  2  7  9  4 13]
 [14 25 16 21  5 19]
 [ 3  4  2  6  1 18]
 [70 70 70 70 70 14]]
 [24 16 10 20 22]
Cycle starting from position (0, 3): 
[[ 0.  0. -4.  4.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  4. -4.  0.]
 [ 0.  0.  0.  0.  0.]]
theta = 4.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  0.  4.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  0.  0. 19.]
 [ 0.  3. 10.  2.  3.]
 [ 0.  0.  0. 14.  0.]]
***********************************
Optimal solution found after 4 iterations!
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  0.  0.  4.  0.]
 [ 0. 13.  0.  0.  0.]
 [ 0.  0.  0.  0. 19.]
 [ 0.  3. 10.  2.  3.]
 [ 0.  0.  0. 14.  0.]]
min = 216.0



***********************************
Input:
***********************************
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  2  3  4  5 28]
 [14 12 10 11 24 13]
 [34 15  6  2  7 19]
 [ 8  8  9  1  2 18]]
 [24 16 10 20 22]


***********************************
Initial solution found using minimum-cost method:
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop: 
[[24.  4.  0.  0.  0.]
 [ 0. 12.  0.  0.  1.]
 [ 0.  0. 10.  2.  7.]
 [ 0.  0.  0. 18.  0.]
 [ 0.  0.  0.  0. 14.]]


***********************************
Method of potentials, step by step
***********************************
12
[[24.  4.  0.  0.  0.]
 [ 0. 12.  0.  0.  1.]
 [ 0.  0. 10.  2.  7.]
 [ 0.  0.  0. 18.  0.]
 [ 0.  0.  0.  0. 14.]]
positions
[12, 14, 24, 22]
--------------
Iteration 1
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  2  3  4  5 28]
 [14 12 10 11 24 13]
 [34 15  6  2  7 19]
 [ 8  8  9  1  2 18]
 [80 80 80 80 80 14]]
 [24 16 10 20 22]
Cycle starting from position (1, 2): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  1.  0. -1.]
 [ 0.  0. -1.  0.  1.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]]
theta = 1.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  4.  0.  0.  0.]
 [ 0. 12.  1.  0.  0.]
 [ 0.  0.  9.  2.  8.]
 [ 0.  0.  0. 18.  0.]
 [ 0.  0.  0.  0. 14.]]
34
[[24.  4.  0.  0.  0.]
 [ 0. 12.  1.  0.  0.]
 [ 0.  0.  9.  2.  8.]
 [ 0.  0.  0. 18.  0.]
 [ 0.  0.  0.  0. 14.]]
positions
[34, 33, 23, 24]
--------------
Iteration 2
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  2  3  4  5 28]
 [14 12 10 11 24 13]
 [34 15  6  2  7 19]
 [ 8  8  9  1  2 18]
 [80 80 80 80 80 14]]
 [24 16 10 20 22]
Cycle starting from position (3, 4): 
[[ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.]
 [ 0.  0.  0.  8. -8.]
 [ 0.  0.  0. -8.  8.]
 [ 0.  0.  0.  0.  0.]]
theta = 8.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  4.  0.  0.  0.]
 [ 0. 12.  1.  0.  0.]
 [ 0.  0.  9. 10.  0.]
 [ 0.  0.  0. 10.  8.]
 [ 0.  0.  0.  0. 14.]]
41
[[24.  4.  0.  0.  0.]
 [ 0. 12.  1.  0.  0.]
 [ 0.  0.  9. 10.  0.]
 [ 0.  0.  0. 10.  8.]
 [ 0.  0.  0.  0. 14.]]
positions
[41, 44, 34, 33, 23, 22, 12, 11]
--------------
Iteration 3
--------------
Matrix C (transportation cost from i-th storage to j-th shop),
vector A (amount of merchandise in i-th storage), on the right
and vector B (demand of j-th shop), at the bottom: 
[[ 1  2  3  4  5 28]
 [14 12 10 11 24 13]
 [34 15  6  2  7 19]
 [ 8  8  9  1  2 18]
 [80 80 80 80 80 14]]
 [24 16 10 20 22]
Cycle starting from position (4, 1): 
[[ 0.  0.  0.  0.  0.]
 [ 0. -9.  9.  0.  0.]
 [ 0.  0. -9.  9.  0.]
 [ 0.  0.  0. -9.  9.]
 [ 0.  9.  0.  0. -9.]]
theta = 9.0
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  4.  0.  0.  0.]
 [ 0.  3. 10.  0.  0.]
 [ 0.  0.  0. 19.  0.]
 [ 0.  0.  0.  1. 17.]
 [ 0.  9.  0.  0.  5.]]
***********************************
Optimal solution found after 3 iterations!
***********************************
Matrix X containing basic variables - amount of merchandise being transported
from i-th storage to j-th shop:
[[24.  4.  0.  0.  0.]
 [ 0.  3. 10.  0.  0.]
 [ 0.  0.  0. 19.  0.]
 [ 0.  0.  0.  1. 17.]
 [ 0.  9.  0.  0.  5.]]
min = 241.0


